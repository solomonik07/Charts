{"version":3,"sources":["components/MainLayout/MainLayout.module.scss","utils/getValidDateFormat.js","components/SelectModule/SelectModule.js","utils/getValidTimeFormat.js","components/ChartModule/ChartModule.js","components/MainLayout/MainLayout.js","App.js","index.js","components/SelectModule/SelectModule.module.scss","components/ChartModule/ChartModule.module.scss"],"names":["module","exports","getValidDateFormat","date","dateObject","Date","parseInt","getDate","getMonth","getFullYear","Option","Select","Text","Typography","SelectModule","props","setSelectedDate","defaultValue","className","s","container","text","style","width","onChange","value","data","map","item","index","timeStart","getValidTimeFormat","getHours","getMinutes","ChartModule","selectedDate","chartContainer","useRef","hazardsData","getHazardsByHourList","filter","val","hazardsByHourList","el","push","Number","timeInMilliseconds","intensity","lifting","twisting","repetition","pb_static","useEffect","svg","select","current","layers","stack","keys","stackGenerator","extent","max","layer","sequence","colors","xScale","scaleBand","domain","d","time","range","padding","yScale","scaleLinear","selectAll","remove","append","call","g","attr","ticks","join","lower","xAxis","axisBottom","tickFormat","tick","height","yAxis","axisLeft","key","bandwidth","margin","ref","MainLayout","useState","layout","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ebc2187d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"MainLayout_layout__1f2BI\"};","const getValidDateFormat = (date) => {\n    const dateObject = new Date(parseInt(date))\n\n    return dateObject.getDate()\n        + '.' + ((dateObject.getMonth() < 10) ? '0' + (dateObject.getMonth() + 1) : (dateObject.getMonth() + 1))\n        + '.' + dateObject.getFullYear()\n}\n\nexport default getValidDateFormat\n","import React from 'react'\nimport { Select, Typography } from 'antd'\n\nimport data from '../../utils/data.json'\nimport getValidDateFormat from '../../utils/getValidDateFormat'\n\nimport s from './SelectModule.module.scss'\n\n\nconst { Option } = Select\nconst { Text } = Typography\n\nconst SelectModule = (props) => {\n\n    const { setSelectedDate, defaultValue } = props\n\n    return (\n        <div className={s.container}>\n            <Text className={s.text}>choosen day</Text>\n            <Select\n                style={{ width: 200 }}\n                defaultValue={defaultValue}\n                onChange={(value) => setSelectedDate(value)}\n            >\n                {data.map((item, index) =>\n                        <Option\n                            key={index}\n                            value={item.timeStart}\n                        >\n                            {getValidDateFormat(item.timeStart)}\n                        </Option>\n                    )\n                })}\n            </Select>\n        </div>\n    )\n}\n\nexport default SelectModule\n","const getValidTimeFormat = (date) => {\n    const dateObject = new Date(parseInt(date))\n\n    return ((dateObject.getHours() < 10) ? '0' + dateObject.getHours() : dateObject.getHours()) + ':' + ((dateObject.getMinutes() === 0) ? dateObject.getMinutes() + '0' : dateObject.getMinutes())\n}\n\nexport default getValidTimeFormat\n","import React, { useRef, useEffect } from 'react'\nimport { Typography } from 'antd'\nimport { select, scaleBand, scaleLinear, axisBottom, stack, max, axisLeft } from 'd3'\nimport data from '../../utils/data.json'\nimport getValidTimeFormat from '../../utils/getValidTimeFormat'\n\nimport s from './ChartModule.module.scss'\n\n\nconst { Text } = Typography\n\nconst ChartModule = (props) => {\n\n    const { selectedDate } = props\n\n    const chartContainer = useRef()\n\n    const getNewObjects = (item) => {\n        return {\n            'time': Number(item.timeInMilliseconds),\n            'intensity': item.intensity,\n            'lifting': item.lifting,\n            'twisting': item.twisting,\n            'repetition': item.repetition,\n            'pb_static': item.pb_static,\n        }\n    }\n\n    const hazardsData = []\n\n    const getHazardsByHourList = (selectedDate) => {\n        let hazardsByHourList\n\n        if(selectedDate) {\n            hazardsByHourList = data.filter(function(val) {\n                return val.timeStart === selectedDate\n            })[0].hazardsByHourList\n\n            return hazardsByHourList.map((el) => {\n                hazardsData.push(getNewObjects(el))\n            })\n        }\n    }\n\n\n    useEffect(() => {\n        getHazardsByHourList(selectedDate)\n\n        const svg = select(chartContainer.current)\n        const width = 500,\n            height = 300\n\n        const stackGenerator = stack().keys(['intensity', 'lifting', 'twisting', 'repetition', 'pb_static'])\n        const layers = stackGenerator(hazardsData)\n\n        const extent = [\n            0,\n            max(layers, layer => max(layer, sequence => sequence[1]))\n        ]\n\n        const colors = {\n            'intensity': '#F94957',\n            'lifting': '#A25ABD',\n            'twisting': '#46AFFB',\n            'repetition': '#34D59E',\n            'pb_static': '#FFD786'\n        }\n\n        const xScale = scaleBand()\n            .domain(hazardsData.map(d => d.time))\n            .range([0, width])\n            .padding(0.5)\n\n        const yScale = scaleLinear()\n            .domain(extent)\n            .range([height, 0])\n\n        const yGrid = (g) => g\n            .attr('class', 'grid-lines')\n            .selectAll('line')\n            .data(yScale.ticks())\n            .join('line')\n            .attr('x1', 0)\n            .attr('x2', width + 20)\n            .attr('y1', d => yScale(d) + 10)\n            .attr('y2', d => yScale(d) + 10)\n\n        if (svg.select('.grid-lines')) {\n            svg.selectAll(\".grid-lines\").remove()\n        }\n        svg.append('g').call(yGrid).lower()\n\n        const xAxis = axisBottom(xScale).tickFormat(tick => getValidTimeFormat(tick))\n        svg.select('.x-axis')\n            .attr('transform', `translate(20, ${height + 10})`)\n            .call(xAxis)\n\n        const yAxis = axisLeft(yScale).ticks((extent[1] / 2))\n        svg.select('.y-axis')\n            .attr('transform', 'translate(20, 3)')\n            .call(yAxis)\n\n\n        svg.selectAll('.layer')\n            .data(layers)\n            .join('g')\n            .attr('class', 'layer')\n            .attr('transform', 'translate(20, 10)')\n            .attr('fill', layer => colors[layer.key])\n            .selectAll('rect')\n            .data(layer => layer)\n            .join('rect')\n            .attr('x', sequence => xScale(sequence.data.time))\n            .attr('width', xScale.bandwidth())\n            .attr('y', sequence => yScale(sequence[1]))\n            .attr('height', sequence => yScale(sequence[0]) - yScale(sequence[1]))\n\n    }, [selectedDate])\n\n    return (\n        <div className={s.container}>\n            <Text className={s.text}>hazards per hour</Text>\n            <div style={{ margin: '30px 0 5px 0', height: 330 }}>\n                <svg ref={chartContainer} style={{ width: '100%', height: '100%' }}>\n                    <g className='x-axis' />\n                    <g className='y-axis' />\n                </svg>\n            </div>\n        </div>\n    )\n}\n\nexport default ChartModule\n","import React, { useState } from 'react'\nimport SelectModule from '../SelectModule/SelectModule'\nimport ChartModule from '../ChartModule/ChartModule'\nimport data from '../../utils/data.json'\n\nimport s from './MainLayout.module.scss'\n\n\nconst MainLayout = () => {\n\n    const [ selectedDate, setSelectedDate ] = useState(data[0].timeStart)\n\n    return (\n        <div className={s.layout}>\n            <SelectModule setSelectedDate={setSelectedDate} defaultValue={data[0].timeStart} />\n            <ChartModule selectedDate={selectedDate} />\n        </div>\n    )\n}\n\nexport default MainLayout\n","import React from 'react'\nimport MainLayout from './components/MainLayout/MainLayout'\n\nimport './App.css'\n\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <MainLayout />\n    </div>\n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'antd/dist/antd.css';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"SelectModule_container__2AB2p\",\"text\":\"SelectModule_text__2TQ5d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ChartModule_container__uS-0f\",\"text\":\"ChartModule_text__34p4q\"};"],"sourceRoot":""}